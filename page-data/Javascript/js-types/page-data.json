{"componentChunkName":"component---src-templates-blog-post-js","path":"/Javascript/js-types/","result":{"data":{"site":{"siteMetadata":{"title":"Jkun.io","author":"Jkun","siteUrl":"https://yilpe93.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"c7735899-6b80-55ee-8baf-3ca6b671862b","excerpt":"데이터 타입 데이터 타입은 프로그래밍 언어에서 사용할 수 있는 데이터(Number, String etc)의 종류이다. 코드에서 사용되는 모든 데이터는 메모리에 저장하고 참조할 수 있어야 한다. 데이터 타입은 데이터를 메모리에 저장할 때 확보해야 하는 메모리 공간의 크기와 할당할 수 있는 유효한 값에 대한 정보, 그리보 메모리에 저장되어 있는 할 지에 대한 정보를 제공한다. 데이터 타입은 한정된 메모리 공간을 효율적으로 사용하기 위해서, 그리고…","html":"<h2 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h2>\n<p>데이터 타입은 프로그래밍 언어에서 사용할 수 있는 데이터(Number, String etc)의 종류이다.</p>\n<p>코드에서 사용되는 모든 데이터는 메모리에 저장하고 참조할 수 있어야 한다. 데이터 타입은 데이터를 메모리에 저장할 때 확보해야 하는 메모리 공간의 크기와 할당할 수 있는 유효한 값에 대한 정보, 그리보 메모리에 저장되어 있는 <code class=\"language-text\">2진수 데이터를 어떻게 해석</code>할 지에 대한 정보를 제공한다.</p>\n<p>데이터 타입은 한정된 메모리 공간을 효율적으로 사용하기 위해서, 그리고 2진수 데이터로 메모리에 저장된 데이터를 다양한 형태로 사용하기 위해 존재한다.</p>\n<h3 id=\"primitive-types--reference-types\" style=\"position:relative;\"><a href=\"#primitive-types--reference-types\" aria-label=\"primitive types  reference types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Primitive Types &#x26;&#x26; Reference Types</h3>\n<ul>\n<li>자바스크립트에는 <code class=\"language-text\">Primitive</code> 와 <code class=\"language-text\">Reference</code> 두 가지 변수 유형이 있다.</li>\n<li>변수는 생성된 후에 메모리에 저장된다.</li>\n<li>변수가 복사되면 메모리 내 값이 복사된다.</li>\n<li>호출을 통해 함수에 변수를 전달하면 해당 변수의 사본도 생성된다.</li>\n</ul>\n<h3 id=\"primitive-types원시-타입\" style=\"position:relative;\"><a href=\"#primitive-types%EC%9B%90%EC%8B%9C-%ED%83%80%EC%9E%85\" aria-label=\"primitive types원시 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Primitive Types(원시 타입)</h3>\n<p>원시형의 값은 <code class=\"language-text\">변경 불가능한 값(immutable value)</code>이며 값에 의해 전달(pass-by-value) 된다.</p>\n<ul>\n<li>null</li>\n<li>undefined</li>\n<li>Boolean</li>\n<li>Number</li>\n<li>String</li>\n<li>Symbol</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\nb <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<blockquote>\n<p>원본은 변경되지 않으며 사본만 변경된다.</p>\n</blockquote>\n<h3 id=\"reference-types객체-타입-참조-타입\" style=\"position:relative;\"><a href=\"#reference-types%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85-%EC%B0%B8%EC%A1%B0-%ED%83%80%EC%9E%85\" aria-label=\"reference types객체 타입 참조 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference Types(객체 타입, 참조 타입)</h3>\n<p>원시 타입을 제외한 나머지 값들(배열, 함수 etc)은 모두 객체이며, 객체는 참조에 의해 전달(passs-by-reference)된다.</p>\n<p>참조 타입이란 객체의 모든 연산이 실제값이 아닌 참조값으로 처리됨을 의미한다. 원시 타입은 값이 한번 정해지면 변경할 수 없지만, 객체는 프로퍼티를 변경, 추가, 삭제등이 가능하므로 변경 가능한 값이다.</p>\n<p>따라서 객체 타입은 동적으로 변화할 수 있으므로 메모리 공간을 확보해야 하는지 예측할 수 없기 때문에 런타임에 메모리 공간을 확보하고 메모리의 <code class=\"language-text\">힙 영역</code>에 저장된다.</p>\n<ul>\n<li>Array</li>\n<li>Object</li>\n<li>Function</li>\n<li>etc..</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    b<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    c<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> another <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n\nanother<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// obj = { a: 1, b: 2, c: 5}</span></code></pre></div>\n<blockquote>\n<p>참조형이 복사된 이후 사본을 변경하면 원본도 변경된다.</p>\n</blockquote>","frontmatter":{"title":"JS. 데이터 타입(Primitive Types & Reference Types)","date":"March 18, 2019"}}},"pageContext":{"slug":"/Javascript/js-types/","previous":{"fields":{"slug":"/Javascript/js-execution-context/"},"frontmatter":{"title":"JS. 실행 컨텍스트(Execution Context)","category":"Javascript","draft":false}},"next":{"fields":{"slug":"/Javascript/js-this/"},"frontmatter":{"title":"JS. this와 bind, call, apply","category":"Javascript","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}