{"componentChunkName":"component---src-templates-blog-post-js","path":"/vue/vue-set-scss/","result":{"data":{"site":{"siteMetadata":{"title":"Jkun.io","author":"Jkun","siteUrl":"https://yilpe93.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"253bb684-c74a-5f36-bfa4-9be5d9af79f5","excerpt":"Vue-Cli에서 SCSS 적용 Vue에서는  덕분에 Single File Component 구성의 .vue 파일 내에서  태그에  요소를 추가하여 사용할 수 있다. SCSS는 사용함에 있어  또는 , 를 사전에 별도의 파일로 분리하여 사용하기에 모든 파일에서 @import 해야하는 반복적인 작업해야하는 불편함이 있을 수 있다. 이런 반복적인 작업을 피하기 위해서는 위의 파일들을 전역 범위에서 사용할 수 있도록 바꿔줘야 한다. 작업에 앞서 vue-cli의 2.x…","html":"<h2 id=\"vue-cli에서-scss-적용\" style=\"position:relative;\"><a href=\"#vue-cli%EC%97%90%EC%84%9C-scss-%EC%A0%81%EC%9A%A9\" aria-label=\"vue cli에서 scss 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue-Cli에서 SCSS 적용</h2>\n<p>Vue에서는 <code class=\"language-text\">vue-loader</code> 덕분에 Single File Component 구성의 .vue 파일 내에서 <code class=\"language-text\">style</code> 태그에 <code class=\"language-text\">lang=&quot;scss&quot;</code> 요소를 추가하여 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev node-sass sass-loader</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"scss\"</span><span class=\"token operator\">></span>\n$bgColor<span class=\"token operator\">:</span> #<span class=\"token number\">232323</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">.</span>className<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token operator\">:</span> $bgColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<p>SCSS는 사용함에 있어 <code class=\"language-text\">variables</code> 또는 <code class=\"language-text\">mixin</code>, <code class=\"language-text\">함수</code>를 사전에 별도의 파일로 분리하여 사용하기에 모든 파일에서 @import 해야하는 반복적인 작업해야하는 불편함이 있을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// *.vue</span>\n\n<span class=\"token operator\">&lt;</span>style lang<span class=\"token operator\">=</span><span class=\"token string\">\"scss\"</span><span class=\"token operator\">></span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"@/style/_variables.scss\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"@/styles/_mixins.scss\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"@/styles/_functions.scss\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* ... */</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>styla<span class=\"token operator\">></span></code></pre></div>\n<p>이런 반복적인 작업을 피하기 위해서는 위의 파일들을 전역 범위에서 사용할 수 있도록 바꿔줘야 한다.</p>\n<p>작업에 앞서 vue-cli의 2.x에서는 <code class=\"language-text\">webpack.config.js</code> 파일이 루트 디렉토리에 있었으나, 3.x에서는 <code class=\"language-text\">vue.config.js</code> 파일을 생성하여 설정해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// vue.config.js</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// options</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">loaderOptions</code> 라는 vue-loader 의 내부 구성을 변경하는데 사용할 수 있는 css 옵션이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// vue.config.js</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  css<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    loaderOptions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      sass<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n          @import \"@/styles/_variables.scss\";\n          @import \"@/styles/_mixins.scss\";\n        </span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 설정을 통해서 sass-loader에 추가된 모든 코드는 전역 범위에서 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">// styles/_variables.scss</span>\n<span class=\"token property\"><span class=\"token variable\">$bgColor</span></span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// *.vue</span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"scss\"</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>className <span class=\"token punctuation\">{</span>\n  background<span class=\"token operator\">:</span> $bgColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"vue-cli-2x-라면\" style=\"position:relative;\"><a href=\"#vue-cli-2x-%EB%9D%BC%EB%A9%B4\" aria-label=\"vue cli 2x 라면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vue-cli 2.x 라면</h3>\n<p>vue-cli 2.x 버전이라면 Webpack 구성 파일의 vue-loader 옵션을 수정해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// webpack.config.js</span>\n\n<span class=\"token punctuation\">{</span>\n  test<span class=\"token operator\">:</span> \\<span class=\"token regex\">/.scss&amp;/</span><span class=\"token punctuation\">,</span>\n  use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"vue-styles-loader\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"css-loader\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      loader<span class=\"token operator\">:</span> <span class=\"token string\">\"scss-loader\"</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        data<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n          @import \"@/styles/_variables.scss\";\n          @import \"@/styles/_mixins.scss\";\n        </span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Vue. vue-cli에서 SCSS 적용과 Global SCSS 적용","date":"March 31, 2019"}}},"pageContext":{"slug":"/vue/vue-set-scss/","previous":{"fields":{"slug":"/Javascript/js-arrow-function/"},"frontmatter":{"title":"ES6. Arrow Function","category":"Javascript","draft":false}},"next":{"fields":{"slug":"/Web/browser/"},"frontmatter":{"title":"브라우저 동작 원리","category":"Web","draft":false}}}}}