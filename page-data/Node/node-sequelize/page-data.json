{"componentChunkName":"component---src-templates-blog-post-js","path":"/Node/node-sequelize/","result":{"data":{"site":{"siteMetadata":{"title":"Jkun.io","author":"Jkun","siteUrl":"https://yilpe93.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"b3f10a6b-d024-5d4e-ae21-b3cf4303884f","excerpt":"란 Node.js 기반의 ORM(Object-Releation-Mapping)이다.\nSQL Query문을 사용하지 않고 자바스크립트만을 이용하여 SQL을 사용할 수 있도록 도와주는 라이브러리이다. 공식문서에 따르면 PostgreSQL, MySQL, MariaDB, SQLite, MS-SQL을 지원한다.\n공식문서 sequlize module 설치 사용할 SQL module…","html":"<p><code class=\"language-text\">Sequelize.js</code>란 Node.js 기반의 ORM(Object-Releation-Mapping)이다.\nSQL Query문을 사용하지 않고 자바스크립트만을 이용하여 SQL을 사용할 수 있도록 도와주는 라이브러리이다.</p>\n<p>공식문서에 따르면 PostgreSQL, MySQL, MariaDB, SQLite, MS-SQL을 지원한다.\n<a href=\"https://sequelize.org/v5/manual/getting-started.html\">공식문서</a></p>\n<p>sequlize module 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> sequelize</code></pre></div>\n<p>사용할 SQL module 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># MySQL</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> mysql2\n\n<span class=\"token comment\"># PostgreSQL</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> pg pg-hstore \n\n<span class=\"token comment\"># Microsoft SQL</span>\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> tedious </code></pre></div>\n<p><code class=\"language-text\">sequelize-cli</code> 전역 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g sequelize-cli\n\n<span class=\"token comment\"># sequelize initialize</span>\n$ sequelize init</code></pre></div>\n<p><code class=\"language-text\">sequelize init</code> 명령어를 통해 초기화를 하게 되면 <code class=\"language-text\">config</code>, <code class=\"language-text\">migrations</code>, <code class=\"language-text\">models</code>, <code class=\"language-text\">seeders</code> 폴더가 생성된다.</p>\n<h2 id=\"연동하기\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0\" aria-label=\"연동하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연동하기</h2>\n<p><code class=\"language-text\">/config/config.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"development\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 데이터베이스 사용자 명</span>\n    <span class=\"token property\">\"password\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 데이터베이스 비밀번호</span>\n    <span class=\"token property\">\"database\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 데이터베이스 이름</span>\n    <span class=\"token property\">\"host\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 데이터베이스 호스트</span>\n    <span class=\"token property\">\"dialect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 사용할 데이터베이스</span>\n    <span class=\"token property\">\"operatorsAliases\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">/models/index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Sequelize <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sequelize\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> env <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/../config/config.json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>env<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">const</span> sequelize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sequelize</span><span class=\"token punctuation\">(</span>\n  config<span class=\"token punctuation\">.</span>database<span class=\"token punctuation\">,</span>\n  config<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n  config<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span>\n  config\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// DB Models...</span>\n\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">modelName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">[</span>modelName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>associate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    db<span class=\"token punctuation\">[</span>modelName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">associate</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndb<span class=\"token punctuation\">.</span>sequelize <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">;</span>\ndb<span class=\"token punctuation\">.</span>Sequelize <span class=\"token operator\">=</span> Sequelize<span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> db<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"모델-만들기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"모델 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델 만들기</h2>\n<p>모델 정의는 sequelize 내장 함수 <code class=\"language-text\">define()</code>을 사용한다.\n<a href=\"https://sequelize.org/v5/manual/data-types.html\">데이터 타입</a></p>\n<p><code class=\"language-text\">/models/user.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> User <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"User\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 테이블 명</span>\n    <span class=\"token comment\">// 스키마 정의</span>\n    <span class=\"token punctuation\">{</span>\n      email<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 40자 이내</span>\n        allowNull<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 필수</span>\n        unique<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 중복 금지</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      nickname<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        allowNull<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 필수</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        allowNull<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// id, createdAt, updatedAt => 필드 자동 생성</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 테이블 옵션</span>\n    <span class=\"token punctuation\">{</span>\n      charset<span class=\"token operator\">:</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">,</span>\n      collate<span class=\"token operator\">:</span> <span class=\"token string\">\"utf8_general_ci\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 한글 저장되도록</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"관계-정의하기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EA%B3%84-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\" aria-label=\"관계 정의하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관계 정의하기</h2>\n<ul>\n<li>BelongsTo</li>\n<li>HasOne</li>\n<li>HasMany</li>\n<li>BelongsToMany</li>\n</ul>\n<blockquote>\n<p>1:1 관계 => <code class=\"language-text\">hasOne()</code>, <code class=\"language-text\">belongsTo()</code><br/>\n1:N 관계 => <code class=\"language-text\">hasMany()</code>, <code class=\"language-text\">belongsTo()</code><br/>\nN:M 관계 => <code class=\"language-text\">belongsToMany()</code> => N:M 관계에 있어 교차 테이블을 생성해야 하며, 교차 테이블은 <code class=\"language-text\">{ through: &#39;교차 테이블명&#39; }</code>와 같이 <code class=\"language-text\">through</code> 프로퍼티로 정의해줄 수 있다.</p>\n</blockquote>\n<h4 id=\"1n-관계\" style=\"position:relative;\"><a href=\"#1n-%EA%B4%80%EA%B3%84\" aria-label=\"1n 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1:N 관계</h4>\n<p>“한 User는 여러개의 Post를 가지고 있을 수 있다.” (1:N의 관계)</p>\n<p>관계 정의를 위해 Post 모델 정의,</p>\n<p><code class=\"language-text\">/modes/post.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> Post <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"Post\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      content<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">TEXT</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 매우 긴 글</span>\n        allowNull<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span>\n      chartset<span class=\"token operator\">:</span> <span class=\"token string\">\"utf8mb4\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// mb4 => 이모티콘 허용하기 위해</span>\n      collate<span class=\"token operator\">:</span> <span class=\"token string\">\"utf8mb4_general_ci\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> Post<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">/models/user.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n  <span class=\"token comment\">// 관계 정의</span>\n  User<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">associate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">db</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    db<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">.</span><span class=\"token function\">hasMany</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">/modes/post.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n  Post<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">associate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">db</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    db<span class=\"token punctuation\">.</span>Post<span class=\"token punctuation\">.</span><span class=\"token function\">belongsTo</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> Post<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"nm-관계\" style=\"position:relative;\"><a href=\"#nm-%EA%B4%80%EA%B3%84\" aria-label=\"nm 관계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>N:M 관계</h4>\n<p>관계 정의를 위해 Hashtag 모델 정의,</p>\n<p><code class=\"language-text\">/models/hashtag.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> Hashtag <span class=\"token operator\">=</span> sequelize<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"Hashtag\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> DataTypes<span class=\"token punctuation\">.</span><span class=\"token constant\">STRING</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        allowNull<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      charset<span class=\"token operator\">:</span> <span class=\"token string\">\"utf8mb4\"</span><span class=\"token punctuation\">,</span>\n      collate<span class=\"token operator\">:</span> <span class=\"token string\">\"utf8mb4_general_ci\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  Hashtag<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">associate</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">db</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    db<span class=\"token punctuation\">.</span>Hashtag<span class=\"token punctuation\">.</span><span class=\"token function\">belongsToMany</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Post<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      through<span class=\"token operator\">:</span> <span class=\"token string\">\"PostHashtag\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> Hashtag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">/modes/post.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sequelize<span class=\"token punctuation\">,</span> DataTypes</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n\n  Post<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">associate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">db</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    db<span class=\"token punctuation\">.</span>Post<span class=\"token punctuation\">.</span><span class=\"token function\">belongsTo</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    db<span class=\"token punctuation\">.</span>Post<span class=\"token punctuation\">.</span><span class=\"token function\">blongsToMany</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Hashtag<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      through<span class=\"token operator\">:</span> <span class=\"token string\">\"PostHashtag\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> Post<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Sequelize.js 다루기","date":"May 01, 2020"}}},"pageContext":{"slug":"/Node/node-sequelize/","previous":{"fields":{"slug":"/vue/nuxt-directory-guide/"},"frontmatter":{"title":"Nuxt.js 디렉토리 구조","category":"Vue","draft":false}},"next":null}}}